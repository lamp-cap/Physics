#include "SPH.hlsl"

#define SPH_BLOCK_SIZE 512
#define PREDICT_STEP 0.01

RWStructuredBuffer<Particle> _ParticleBuffer;
RWStructuredBuffer<int2> _SpatialLut;
RWStructuredBuffer<uint> _StartIndices;

float _Gravity;
float _DeltaTime;

#pragma kernel CSMain
[numthreads(SPH_BLOCK_SIZE, 1, 1)]
void CSMain (uint3 DTid : SV_DispatchThreadID)
{
    float3 velocity = _ParticleBuffer[DTid.x].velocity + float3(0, -1, 0) * (_Gravity * _DeltaTime);
    float3 position = _ParticleBuffer[DTid.x].position + velocity * PREDICT_STEP;

    int3 cellCoord = PositionToCellcoord(position);
    uint cellKey = GetKeyFromCellcoord(cellCoord);

    _SpatialLut[DTid.x] = int2(DTid.x, cellKey);
    _StartIndices[DTid.x] = 0x7FFFFFFF;
    _ParticleBuffer[DTid.x].velocity = velocity;
    _ParticleBuffer[DTid.x].positionPredicted = position;
}
